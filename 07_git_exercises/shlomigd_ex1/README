Git Basics:

1. cat > abc.txt
   1
   ctrl d

2.Red.
3.Green.
    git status
    git add abc.txt
    git status
    git commit abc.txt -m "file created"
4.  echo "2" >> abc.txt
5.Blue.
6.git diff main.
7.Because we didn't add the file abc.txt to the index area.
8.Because stage2 is not an option of the command git diff.
9.  git add abc.txt
10.git diff prints nothing because there is no differences between the index and the working copy.
11. git diff --staged.
12. echo "3" >> abc.txt
13.No,because the git diff --staged command will compare the index with the master and the command git diff main will also compare the changes in the working copy.
14.Because one change in the file is ready to be committed and another change is not staged for commit.
15. git restore --staged abc.txt
    git restore abc.txt

Resolve conflicts:

6. Yes, the commits are:
[git_ex1_repo] git -c credential.helper= -c core.quotepath=false -c log.showSignature=false commit -F C:\Users\shlomi\PycharmProjects\git_ex1_repo\.git\MERGE_MSG --
[feature/lambda_migration 798ff58] Merge branch 'feature/version2' into feature/lambda_migration

|Cherry picking:

4. file config.json and file .env.
5.Yes,because if the first commit create a file and the second one update the file and you will choose to cherry pick only the second one it will fail
  and sometimes you create a function that calls another function and if and if this function is missing it will fail.
