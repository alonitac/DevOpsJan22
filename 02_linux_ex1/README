d.shtranvasser@gmail.com
< 814c5723c21e7e90a3eae36c8df3c513 >


Kernel System Calls
-------------------
The whatIdo program does the following:

creates a folder welcomeToDevOpsJan22 with 700 permissions (drwx------)
creates a file goodLuck inside the folder and set the permissions to 664 (-rw-rw-r--)
insert the following text into a file: "There you go... tell me what i do..."
exit the program

Binary Numbers
--------------
1.Convert the following binary numbers to a decimals: 111, 100, 10110 :

example ( 0 = off , 1 = on):
 0  0  0  0   0 0 0 0 = 0
 0  0  0  0   0 0 0 1 = 1
 0  0  0  1   0 0 0 0 = 16
---------------------
128 64 32 16  8 4 2 1

111:
1 1 1 = 7 (1+2+4)
-----
4 2 1

100:
1 0 0 = 4 (0+0+4)
-----
4 0 0

10110:
1  0 1 1 0 = 22 (0+2+4+0+16)
----------
16 0 4 2 0

2.What is the available decimal range represented by a 8 bits binary number?

0-255 (256 numbers)

3.Given a 9 bits binary number, suggest a method to represent a negative numbers between 0-255 :

negative numbers always starts with 1 (-182 = 1111 1111 0100 1010 ( in 9 bits - 1|01001010 ))
positive numbers always starts with 0 ( 182 = 0000 0000 1011 0110 ( in 9 bits - 0|10110110 ))
                                                      ^                         ^
(The simplest way represent negative numbers is to simply use the leftmost digit of the number as a special value to represent the sign of the number:
0 = positive 1 = negative. For example, a value of positive 12 would be written as 01100 in binary, but negative 12 would be written as 11100.
a different way, called "two's complement" is more often used for representing negative numbers. In this way, a positive 12 is still 01100,
but -12 would be written as 10100. Either 11100 or 10100 can be used to represent -12, it just depends on what system of interpretation is used.)

4.Suggest a method to represent a floating point numbers (e.g. 12.3, 15.67, 0.231) using a 8 bits binary numbers

12.3 = 1100.01001100 (in 8 bits - 1100.0100)
           ^                          ^
15.67 = 1111.10101011 (in 8 bits - 1100.1010)
            ^                          ^
0.231 = 0.00111011
         ^

(The IEEE Standard for Floating-Point Arithmetic (IEEE 754) is a technical standard for floating-point arithmetic established in 1985
by the Institute of Electrical and Electronics Engineers (IEEE).
The standard addressed many problems found in the diverse floating-point implementations that made them difficult to use reliably and portably.
